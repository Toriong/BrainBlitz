@import "./variables.css";

/* create a media query for how many dots to repeat */
.game-grid {
    display: grid;
    /* height: 80vh;
    width: 70vw; */
    grid-template-columns: repeat(10, 1fr);
    padding-top: 20px;
    max-height: 800px;
    min-height: 500px;
}

/* the container for each dot */
.btn-cell {
    position: relative;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.dot-btn {
    width: 25px;
    height: 25px;
}

@media(max-width: 300px) {
    .dot-btn {
        width: 17px;
        height: 17px;
    }
}

@media (min-width: 992px) and (max-width: 1440px) {
    .game-grid {
        min-width: 800px;
        height: 53vh;
    }
}

@media(min-width: 577px) and (max-width: 992px) {
    .game-grid {
        min-width: 500px;
        min-height: 400px;
        width: 100%;
        height: 70vh;
    }

    #game-grid-container {
        padding-left: 20px;
        padding-right: 20px;
    }

    #game-grid-container {
        padding-left: 10px;
        padding-right: 10px;
    }
}


@media(min-width: 768px) and (max-width: 991px) {
    .game-grid {
        height: 60vh;
    }
}

/* if the width is between 768px and the heighte is greater than the width, then update    */
/* -the height of the game to be 55vh */


@media(min-width: 768px) and (orientation: portrait) {
    .game-grid {
        height: 53vh;
    }
}

@media(min-width: 768px) and (orientation: portrait) and (min-height: 1200px) {
    .game-grid {
        height: 80vh;
    }
}

@media(max-width: 991px) {
    .game-grid {
        width: 100%;
    }
}

@media(max-width: 576px) {
    #game-grid-container {
        padding-left: 5px;
        padding-right: 5px;
    }
}

@media(min-width: 1024px) {}

@media(max-width: 576px) {
    .results-modal {
        width: 95vw !important;
    }
}



/* WIDDEN THE GRID WHEN THE USER IS ON A GALAXY FOLD */